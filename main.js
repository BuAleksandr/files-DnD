(()=>{"use strict";class t{constructor(t){this.section=document.getElementById(t),this.cardList=this.section.querySelector(".app__card-list"),this.openFormBtn=this.section.querySelector(".app__add-card-btn"),this.addCardForm=this.section.querySelector(".app__form"),this.addCardTextarea=this.addCardForm.querySelector(".form__textarea"),this.closeFormBtn=this.addCardForm.querySelector(".close-btn"),this.section.addEventListener("click",(t=>{t.target!==this.openFormBtn&&t.target!==this.closeFormBtn||(this.toggleForm(),t.currentTarget.classList.contains("hidden")||(this.addCardForm.reset(),this.addCardTextarea.focus()))})),this.addCardForm.addEventListener("submit",(t=>{if(t.preventDefault(),""===this.addCardTextarea.value)throw new Error("Empty value");this.addCard(this.addCardTextarea.value),t.currentTarget.reset(),this.toggleForm()}))}static renderCard(t){const e=document.createElement("li");e.classList.add("app__card"),e.textContent=`${t}`;const s=document.createElement("a");return s.href="#",s.classList.add("close-btn","card__close-btn"),e.appendChild(s),e.addEventListener("mouseover",(()=>{s.style.opacity="1"})),e.addEventListener("mouseout",(()=>{s.style.opacity="0"})),s.addEventListener("click",(()=>{e.remove()})),e}addCard(t){this.cardList.appendChild(this.constructor.renderCard(t))}toggleForm(){this.openFormBtn.classList.toggle("hidden"),this.addCardForm.classList.toggle("hidden")}}class e{constructor(){this.cardLists=[...document.querySelectorAll(".app__card-list")],this.draggedEl=null,this.ghostEl=null,this.emptyEl=null,this.dragged=!1,this.pageX=0,this.pageY=0,this.cardLists.forEach((t=>{t.addEventListener("mousedown",(t=>{t.preventDefault(),this.draggedEl=t.target,this.draggedEl.classList.contains("app__card")&&(this.pageX=t.pageX,this.pageY=t.pageY,this.ghostEl=this.draggedEl.cloneNode(!0),this.ghostEl.classList.add("dragged"),this.ghostEl.style.width=`${this.draggedEl.getBoundingClientRect().width}px`,this.ghostEl.style.transform="rotate(5deg)",document.body.appendChild(this.ghostEl),this.coordsEl={x:this.draggedEl.getBoundingClientRect().x,y:this.draggedEl.getBoundingClientRect().y},this.size={width:this.draggedEl.getBoundingClientRect().width,height:this.draggedEl.getBoundingClientRect().height},this.delta={x:t.pageX-this.coordsEl.x,y:t.pageY-this.coordsEl.y},this.ghostEl.style.left=`${this.coordsEl.x}px`,this.ghostEl.style.top=`${this.coordsEl.y}px`,document.body.style.cursor="grabbing",this.emptyEl=document.createElement("div"),this.emptyEl.className="empty",this.emptyEl.style.width=`${this.size.width}px`,this.emptyEl.style.height=`${this.size.height}px`,this.draggedEl.replaceWith(this.emptyEl),this.dragged=!0)})),document.addEventListener("mousemove",(t=>{if(t.preventDefault(),!this.dragged)return;this.ghostEl.style.left=t.pageX-this.delta.x+"px",this.ghostEl.style.top=t.pageY-this.delta.y+"px";const e=this.ghostEl.getBoundingClientRect().y;this.closestEl=document.elementFromPoint(t.pageX,t.pageY);const s=this.closestEl.getBoundingClientRect().y;let i;this.closestEl.closest(".app__section")&&(i=this.closestEl.closest(".app__section"),this.closestList=i.querySelector(".app__card-list")),this.closestEl.classList.contains("app__card")?e<s?this.closestEl.insertAdjacentElement("beforebegin",this.emptyEl):e>s&&this.closestEl.insertAdjacentElement("afterend",this.emptyEl):this.closestList&&0===this.closestList.children.length&&this.closestList.appendChild(this.emptyEl)})),document.addEventListener("mouseup",(t=>{t.preventDefault(),this.dragged&&((this.closestList&&document.querySelector(".empty")||this.pageX===t.pageX&&this.pageY===t.pageY)&&(document.body.removeChild(this.ghostEl),this.emptyEl.replaceWith(this.draggedEl),this.ghostEl=null,this.draggedEl=null,this.dragged=!1),document.body.style.cursor="auto")}))}))}}class s{constructor(){this.appStateTemplate=[{name:"todo",items:[]},{name:"inprogress",items:[]},{name:"done",items:[]}],this.appState=this.appStateTemplate,this.cardLists=[...document.querySelectorAll(".app__card-list")],this.init(),window.addEventListener("unload",(()=>{this.setState()}))}setState(){this.appState=this.appStateTemplate,this.cardLists.forEach((t=>{this.appState.forEach((e=>{e.name===t.closest(".app__section").id&&(console.log(e),t.children.length>0&&[...t.querySelectorAll(".app__card")].forEach((t=>{e.items.push({text:`${t.textContent}`})})))}))})),localStorage.setItem("appState",JSON.stringify(this.appState))}getState(){if(null!==localStorage.getItem("appState")){const t=JSON.parse(localStorage.getItem("appState"));this.appState=[...t]}}static renderCard(t){const e=document.createElement("li");e.classList.add("app__card"),e.textContent=`${t}`;const s=document.createElement("a");return s.href="#",s.classList.add("close-btn","card__close-btn"),e.appendChild(s),e.addEventListener("mouseover",(()=>{s.style.opacity="1"})),e.addEventListener("mouseout",(()=>{s.style.opacity="0"})),s.addEventListener("click",(()=>{e.remove()})),e}addCard(t,e){t.appendChild(this.constructor.renderCard(e))}init(){this.getState(),this.appState.forEach((t=>{this.cardLists.forEach((e=>{t.name===e.closest(".app__section").id&&t.items.forEach((t=>{this.addCard(e,`${t.text}`)}))}))}))}}window.onload=()=>{new t("todo"),new t("inprogress"),new t("done"),new s,new e}})();